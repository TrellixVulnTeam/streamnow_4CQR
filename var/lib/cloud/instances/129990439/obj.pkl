ccopy_reg
_reconstructor
p1
(ccloudinit.sources.DataSourceConfigDrive
DataSourceConfigDriveNet
p2
c__builtin__
object
p3
NtRp4
(dp5
S'files'
p6
(dp7
V/etc/network/interfaces
p8
S"# Generated by the DigitalOcean provisioning process on 2019-03-30T19:44:23Z\n# See 'man interfaces' on a Debian/Ubuntu systems.\n# The network configuration was generated from http://169.254.169.254/metadata/v1.json.\n# You may also find the it on the locally attached CDROM under 'digitalocean_meta_data.json'\n\nauto lo\niface lo inet loopback\n\tdns-nameservers  67.207.67.2 67.207.67.3\n\nauto eth0\niface eth0 inet static\n\thwaddress be:54:a0:29:cf:fc\n\taddress   157.230.91.0\n\tnetmask   255.255.240.0\n\tgateway   157.230.80.1\n\tpost-up ifup eth0:1\n\n\nauto eth0:1\niface eth0:1 inet static\n\thwaddress be:54:a0:29:cf:fc\n\taddress   10.10.0.7/255.255.0.0\n"
p9
sV/etc/udev/rules.d/70-persistent-net.rules
p10
S'# Generated by the DigitalOcean provisioning process on 2019-03-30T19:44:23Z\n# the following rules ensure that the Network Interfaces are named as expected.\n\n# DigitalOcean rule for eth0\nSUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="be:54:a0:29:cf:fc", NAME="eth0"\n\n# DigitalOcean rule for lo\nSUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="", NAME="lo"\n\n'
p11
sV/etc/resolv.conf
p12
S'nameserver 67.207.67.2\nnameserver 67.207.67.3\n'
p13
ssS'paths'
p14
g1
(ccloudinit.helpers
Paths
p15
g3
NtRp16
(dp17
S'lookups'
p18
(dp19
S'cloud_config'
p20
S'cloud-config.txt'
p21
sS'userdata'
p22
S'user-data.txt.i'
p23
sS'vendordata'
p24
S'vendor-data.txt.i'
p25
sS'userdata_raw'
p26
S'user-data.txt'
p27
sS'boothooks'
p28
g28
sS'scripts'
p29
g29
sS'sem'
p30
g30
sS'data'
p31
g31
sS'vendor_scripts'
p32
S'scripts/vendor'
p33
sS'handlers'
p34
g34
sS'obj_pkl'
p35
S'obj.pkl'
p36
sS'vendordata_raw'
p37
S'vendor-data.txt'
p38
sS'vendor_cloud_config'
p39
S'vendor-cloud-config.txt'
p40
ssS'template_tpl'
p41
S'/etc/cloud/templates/%s.tmpl'
p42
sS'cfgs'
p43
(dp44
S'cloud_dir'
p45
S'/var/lib/cloud/'
p46
sS'templates_dir'
p47
S'/etc/cloud/templates/'
p48
sS'upstart_dir'
p49
S'/etc/init/'
p50
ssS'cloud_dir'
p51
g46
sS'datasource'
p52
NsS'upstart_conf_d'
p53
g50
sS'boot_finished'
p54
S'/var/lib/cloud/instance/boot-finished'
p55
sS'instance_link'
p56
S'/var/lib/cloud/instance'
p57
sS'seed_dir'
p58
S'/var/lib/cloud/seed'
p59
sbsS'ec2_metadata'
p60
(dp61
sS'sys_cfg'
p62
(dp63
S'_log'
p64
(lp65
S'[loggers]\nkeys=root,cloudinit\n\n[handlers]\nkeys=consoleHandler,cloudLogHandler\n\n[formatters]\nkeys=simpleFormatter,arg0Formatter\n\n[logger_root]\nlevel=DEBUG\nhandlers=consoleHandler,cloudLogHandler\n\n[logger_cloudinit]\nlevel=DEBUG\nqualname=cloudinit\nhandlers=\npropagate=1\n\n[handler_consoleHandler]\nclass=StreamHandler\nlevel=WARNING\nformatter=arg0Formatter\nargs=(sys.stderr,)\n\n[formatter_arg0Formatter]\nformat=%(asctime)s - %(filename)s[%(levelname)s]: %(message)s\n\n[formatter_simpleFormatter]\nformat=[CLOUDINIT] %(filename)s[%(levelname)s]: %(message)s\n'
p66
aS"[handler_cloudLogHandler]\nclass=FileHandler\nlevel=DEBUG\nformatter=arg0Formatter\nargs=('/var/log/cloud-init.log',)\n"
p67
aS'[handler_cloudLogHandler]\nclass=handlers.SysLogHandler\nlevel=DEBUG\nformatter=simpleFormatter\nargs=("/dev/log", handlers.SysLogHandler.LOG_USER)\n'
p68
asS'output'
p69
(dp70
S'all'
p71
S'| tee -a /var/log/cloud-init-output.log'
p72
ssS'users'
p73
(lp74
S'default'
p75
asS'disable_root'
p76
I01
sS'def_log_file'
p77
S'/var/log/cloud-init.log'
p78
sS'syslog_fix_perms'
p79
S'syslog:adm'
p80
sS'log_cfgs'
p81
(lp82
(lp83
g66
ag68
aa(lp84
g66
ag67
aasS'cloud_init_modules'
p85
(lp86
S'migrator'
p87
aS'seed_random'
p88
aS'bootcmd'
p89
aS'write-files'
p90
a(lp91
S'growpart'
p92
aS'always'
p93
aa(lp94
S'resizefs'
p95
aS'always'
p96
aaS'set_hostname'
p97
aS'update_hostname'
p98
a(lp99
S'update_etc_hosts'
p100
aS'once-per-instance'
p101
aaS'ca-certs'
p102
aS'rsyslog'
p103
aS'users-groups'
p104
aS'ssh'
p105
asS'preserve_hostname'
p106
I00
sS'cloud_final_modules'
p107
(lp108
S'rightscale_userdata'
p109
aS'scripts-vendor'
p110
aS'scripts-per-once'
p111
aS'scripts-per-boot'
p112
aS'scripts-per-instance'
p113
aS'scripts-user'
p114
aS'ssh-authkey-fingerprints'
p115
aS'keys-to-console'
p116
aS'phone-home'
p117
aS'final-message'
p118
aS'power-state-change'
p119
asS'datasource_list'
p120
(lp121
S'ConfigDrive'
p122
aS'DigitalOcean'
p123
aS'NoCloud'
p124
aS'None'
p125
asS'vendor_data'
p126
(dp127
S'prefix'
p128
(lp129
sS'enabled'
p130
I01
ssS'cloud_config_modules'
p131
(lp132
S'emit_upstart'
p133
aS'disk_setup'
p134
aS'mounts'
p135
aS'ssh-import-id'
p136
aS'locale'
p137
aS'set-passwords'
p138
aS'grub-dpkg'
p139
aS'apt-pipelining'
p140
aS'apt-configure'
p141
aS'package-update-upgrade-install'
p142
aS'landscape'
p143
aS'timezone'
p144
aS'puppet'
p145
aS'chef'
p146
aS'salt-minion'
p147
aS'mcollective'
p148
aS'disable-ec2-metadata'
p149
aS'runcmd'
p150
aS'byobu'
p151
assg22
Nsg24
Nsg26
S''
sg37
VContent-Type: multipart/mixed; boundary="===============8645434374073493512=="\u000aMIME-Version: 1.0\u000a\u000a--===============8645434374073493512==\u000aMIME-Version: 1.0\u000aContent-Type: text/cloud-config; charset="us-ascii"\u000aContent-Transfer-Encoding: 7bit\u000aContent-Disposition: attachment; filename="cloud-config"\u000a\u000a#cloud-config\u000a\u000a# Enable root and password auth\u000adisable_root: false\u000assh_pwauth: false\u000a\u000a# Allow cloud-init to manage /etc/hosts\u000amanage_etc_hosts: true\u000a\u000a# Set the default user to root and define the package mirrors\u000asystem_info:\u000a   distro: ubuntu\u000a   default_user:\u000a      name: root\u000a      shell: /bin/bash\u000a      lock_passwd: false\u000a   package_mirrors:\u000a     - arches: [i386, amd64]\u000a       failsafe:\u000a         primary: http://archive.ubuntu.com/ubuntu\u000a         security: http://security.ubuntu.com/ubuntu\u000a       search:\u000a         primary:\u000a           - http://mirrors.digitalocean.com/ubuntu/\u000a         security: []\u000a\u000a\u000a--===============8645434374073493512==\u000aMIME-Version: 1.0\u000aContent-Type: text/cloud-boothook; charset="us-ascii"\u000aContent-Transfer-Encoding: 7bit\u000aContent-Disposition: attachment; filename="entropy-seed"\u000a\u000a#!/bin/sh -x\u000a# DigitalOcean Entropy Seed script\u000alogger -t DigitalOcean 'adding random seed to /dev/urandom'\u000a(base64 -d <<EOE\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\u000a\u000aEOE\u000a) > /dev/urandom \u000a\u000a\u000a--===============8645434374073493512==\u000aMIME-Version: 1.0\u000aContent-Type: text/cloud-boothook; charset="us-ascii"\u000aContent-Transfer-Encoding: 7bit\u000aContent-Disposition: attachment; filename="digitalocean_fixups"\u000a\u000a#!/bin/sh\u000a\u000a# Disable the locale warning: by default imported cloud-images check the default\u000a# local and give a warning about invalid locales. The following line disable\u000a# the warning.\u000a\u000a# do not assume that /etc/skel exists\u000aif [ -d /etc/skel ]; then\u000a    touch /etc/skel/.cloud-locale-test.skip\u000afi\u000atouch /root/.cloud-locale-test.skip\u000a\u000a# Disable Ubuntu MOTD\u000aif [ -f /etc/default/motd-news ]; then\u000a    sed -e "s/ENABLED=1/ENABLED=0/g" \u005c\u000a        -i /etc/default/motd-news\u000afi\u000a\u000a# Fix buggy cloud-init routes for IPv6\u000ar6c="/etc/sysconfig/network-scripts/route6-eth0"\u000aif [ -f "${r6c}" ]; then\u000a    sed -e "s|::/::|default|g" -i "${r6c}"\u000a    awk '/default via/{system("ip -6 route add default via "$NF" dev eth0")}' "${r6c}"\u000aelif [ -d "/etc/sysconfig/network-scripts" -a -f "/etc/network/interfaces" ]; then\u000a    # This deals with a bug in Fedora 27 where the network interface is not set\u000a    # properly by Cloud-init.\u000a    i6gw=$(egrep -A3 'iface eth0:1 inet6 static' /etc/network/interfaces | awk '/gateway/{print$NF}')\u000a    if [ -n "${i6gw}" ]; then\u000a        ip -6 route add default via ${i6gw} dev eth0\u000a        cat > ${r6c} <<EOM\u000a# DigitalOcean: written by ConfigDrive customization.\u000adefault via ${i6gw}\u000aEOM\u000a    fi\u000afi\u000a\u000a# Fix screwy file permmissions on the system resolvers.\u000achmod 0644 /etc/resolv.conf\u000a\u000a# Support automatic disk resizing per boot.\u000a# Only update /etc/hosts once per instance.\u000amkdir -p /etc/cloud/cloud.cfg.d\u000acat > /etc/cloud/cloud.cfg.d/90-digitalocean.cfg <<EOM\u000a####\u000a# DigitalOcean: this file was written via cloud-init and composed from /etc/cloud/cloud.cfg\u000a#               In order to support resize events, 'growpart' and 'resizefs' are run each boot.\u000a#               'update_etc_hosts' will be run only once per instance. To see the differences, run\u000a#               'diff -u /etc/cloud/cloud.cfg /etc/cloud/cloud.cfg.d/90-digitalocean.cfg'.\u000a#\u000a#               This file was written to support Droplet $(</sys/devices/virtual/dmi/id/product_serial) on $(date +%Y-%m-%d)\u000a####\u000a\u000aEOM\u000ased -e "s/- growpart$/- [ growpart, always ]/g" \u005c\u000a    -e "s/- resizefs$/- [ resizefs, always ]/g" \u005c\u000a    -e "s/- update_etc_hosts$/- [ update_etc_hosts, once-per-instance ]/g" \u005c\u000a    /etc/cloud/cloud.cfg >> /etc/cloud/cloud.cfg.d/90-digitalocean.cfg\u000a\u000a# Fix for machine-id's being dubiously present\u000acat > /var/lib/cloud/scripts/per-instance/machine_id.sh <<EOM\u000a#!/bin/bash\u000aCT=\u005c$(date +%s);\u000aFT=\u005c$(stat /etc/machine-id -c %Y);\u000aDIFF=\u005c$(expr \u005c$CT - \u005c$FT)\u000a# record timestamp on machine-id for testing\u000a# If /etc/machine_id is over 10m old on first-boot, delete it\u000aif [ -f /etc/machine-id ]; then\u000a    if [ \u005c$DIFF -lt 600 ]; then\u000a        exit 0\u000a    fi\u000arm -rf /etc/machine-id\u000afi\u000a\u000a# systemd will use dbus uudigen if its there\u000a# we need to reset this for Debain 9.\u000aif which dbus-uuidgen &> /dev/null; then\u000a    rm -rf /var/lib/dbus/machine-id\u000a    dbus-uuidgen --ensure=/var/lib/dbus/machine-id\u000afi\u000a\u000aif which systemd-machine-id-setup &> /dev/null; then\u000a    rm -rf /etc/machine-id\u000a    systemd-machine-id-setup\u000afi\u000aEOM\u000achmod 0700 /var/lib/cloud/scripts/per-instance/machine_id.sh\u000a\u000a# DigitalOcean updated the vendor-data to better support various distributions.\u000a# This script makes it so older snapshots will work by restoring the default behavior\u000a# of cloud-init.\u000aif [ -e /etc/cloud/cloud.cfg.disabled ]; then\u000a    mv /etc/cloud/cloud.cfg /etc/cloud/cloud.cfg.d/99-digitalocean.cfg\u000a    mv /etc/cloud/cloud.cfg.disabled /etc/cloud/cloud.cfg\u000a    logger -t DigitalOcean "restored default cloud-init behavior by renaming /etc/cloud/cloud.cfg.disabled to /etc/cloud/cloud.cfg"\u000afi\u000a\u000aif [ -d /etc/udev/rules.d ]; then\u000a    # Add udev rules to automount block storage volumes.\u000a    cat > /etc/udev/rules.d/99-digitalocean-automount.rules <<EOM\u000a# Only try to automount DO block volumes.\u000aSUBSYSTEM!="block", GOTO="do_automount_end"\u000aENV{ID_VENDOR}!="DO", GOTO="do_automount_end"\u000aENV{ID_MODEL}!="Volume", GOTO="do_automount_end"\u000a# Only automount on the "add" action.\u000aACTION!="add", GOTO="do_automount_end"\u000a# Only try to automount filesystems we know about.\u000aENV{ID_FS_TYPE}!="ext4|xfs", GOTO="do_automount_end"\u000a\u000a# Create a temporary mountpoint and temporary location for the first-mount script.\u000aIMPORT{program}="/bin/sh -c 'echo TMP_MOUNT_DIR=\u005c$(mktemp -d -p /mnt .do-first-mount-XXXXXXXXX)'"\u000aIMPORT{program}="/bin/sh -c 'echo TMP_SCRIPT=\u005c$(mktemp -t .do-first-mount-XXXXXXXXX.sh)'"\u000a\u000a# Mount the volume at the temp mountpoint and copy the script off, then unmount.\u000aRUN{program}+="/bin/mount -o ro /dev/%k %E{TMP_MOUNT_DIR}"\u000aRUN{program}+="/bin/sh -c '/bin/cp %E{TMP_MOUNT_DIR}/.first-mount.sh %E{TMP_SCRIPT} || exit 0'"\u000aRUN{program}+="/bin/umount %E{TMP_MOUNT_DIR}"\u000aRUN{program}+="/bin/rmdir %E{TMP_MOUNT_DIR}"\u000a\u000a# Run the first-mount script. If it didn't exist this will be a no-op.\u000aRUN{program}+="/bin/sh %E{TMP_SCRIPT} '%E{ID_SERIAL}' '%E{ID_FS_TYPE}' '%E{ID_SERIAL_SHORT}' '%E{ID_FS_UUID}' '%E{ID_FS_LABEL}'"\u000a\u000a# Clean up.\u000aRUN{program}+="/bin/rm %E{TMP_SCRIPT}"\u000a\u000a# Finally, try and mount the volume. On first mount this will fail, but that's\u000a# OK because the volume was already mounted by the first-mount script.\u000aRUN{program}+="/bin/sh -c '/bin/mount /dev/%k || exit 0'"\u000a\u000aLABEL="do_automount_end"\u000aEOM\u000a\u000a    # Some versions of systemd-udevd end up in a weird state when we add and\u000a    # trigger rules on-the-fly, as below. Restarting the service seems to\u000a    # resolve things. See BLOCK-1435 for details.\u000a    if which systemctl &> /dev/null ; then\u000a        systemctl restart systemd-udevd.service\u000a    fi\u000a\u000a    # Load the newly-added udev rules and then manually trigger them to catch\u000a    # any automount volumes that were attached at boot.\u000a    if which udevadm &> /dev/null ; then\u000a        udevadm control -R\u000a        udevadm trigger --action=add --subsystem-match=block\u000a    fi\u000afi\u000a\u000a--===============8645434374073493512==--\u000a\u000a
p152
sS'vendordata_pure'
p153
g152
sS'source'
p154
S'/dev/vdb'
p155
sS'version'
p156
I2
sS'ud_proc'
p157
g1
(ccloudinit.user_data
UserDataProcessor
p158
g3
NtRp159
(dp160
g14
g16
sS'ssl_details'
p161
(dp162
sbsg58
S'/var/lib/cloud/seed/config_drive'
p163
sS'ds_cfg'
p164
(dp165
sS'distro'
p166
g1
(ccloudinit.distros.ubuntu
Distro
p167
g3
NtRp168
(dp169
S'osfamily'
p170
S'debian'
p171
sS'_paths'
p172
g16
sS'name'
p173
S'ubuntu'
p174
sS'_runner'
p175
g1
(ccloudinit.helpers
Runners
p176
g3
NtRp177
(dp178
g14
g16
sS'sems'
p179
(dp180
sbsS'_cfg'
p181
(dp182
S'ssh_svcname'
p183
S'ssh'
p184
sS'paths'
p185
(dp186
g45
g46
sg47
g48
sg49
g50
ssS'package_mirrors'
p187
(lp188
(dp189
S'arches'
p190
(lp191
S'i386'
p192
aS'amd64'
p193
asS'failsafe'
p194
(dp195
S'security'
p196
S'http://security.ubuntu.com/ubuntu'
p197
sS'primary'
p198
S'http://archive.ubuntu.com/ubuntu'
p199
ssS'search'
p200
(dp201
S'security'
p202
(lp203
sS'primary'
p204
(lp205
S'http://%(ec2_region)s.ec2.archive.ubuntu.com/ubuntu/'
p206
aS'http://%(availability_zone)s.clouds.archive.ubuntu.com/ubuntu/'
p207
aS'http://%(region)s.clouds.archive.ubuntu.com/ubuntu/'
p208
assa(dp209
S'arches'
p210
(lp211
S'armhf'
p212
aS'armel'
p213
aS'default'
p214
asS'failsafe'
p215
(dp216
S'security'
p217
S'http://ports.ubuntu.com/ubuntu-ports'
p218
sS'primary'
p219
S'http://ports.ubuntu.com/ubuntu-ports'
p220
ssasS'default_user'
p221
(dp222
S'shell'
p223
S'/bin/bash'
p224
sS'name'
p225
S'ubuntu'
p226
sS'sudo'
p227
(lp228
S'ALL=(ALL) NOPASSWD:ALL'
p229
asS'lock_passwd'
p230
I01
sS'gecos'
p231
S'Ubuntu'
p232
sS'groups'
p233
(lp234
S'adm'
p235
aS'audio'
p236
aS'cdrom'
p237
aS'dialout'
p238
aS'dip'
p239
aS'floppy'
p240
aS'netdev'
p241
aS'plugdev'
p242
aS'sudo'
p243
aS'video'
p244
asssbsS'dsmode'
p245
S'net'
p246
sS'metadata'
p247
(dp248
Vfiles
p249
(lp250
(dp251
Vpath
p252
g8
sVcontent_path
p253
V/content/0000
p254
sa(dp255
Vpath
p256
g10
sVcontent_path
p257
V/content/000u
p258
sa(dp259
Vpath
p260
g12
sVcontent_path
p261
V/content/000r
p262
sasVadmin_pass
p263
Va8e8b00ffce9977699399bcba5f984e6
p264
sS'local-hostname'
p265
VStreamnow
p266
sVuuid
p267
V129990439
p268
sVavailability_zone
p269
Vnyc1
p270
sVhostname
p271
g266
sVinstance_id
p272
V129990439
p273
sVpublic_keys
p274
(dp275
V0
Vssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsXSJl2TpMwDxS5R+nri3es15msTCRcx7mVCPFGRL5m77o5MGmOEptf4UmLiZLc8JAuYK6ibsdsHElXi5OqeU4UWrQHYbfneVm/0EanA9MRhOIGU3DKf4Dmkhq9f8anhvvODWvjLPf+ttWS9dV3cpf7vQkeD65WiCz9aE/UgDLzKtfh7Ua2N457+egctVrn7wtFcUcmHkYRkwLGywlkxYeFeB/1Tz/bC4OcXeCdfi4gbkBHfTSmEcgzqHWMsiEHdW6pIWC5D4+pIL5qOtdbFdK+XSsRJsnBzY3DbLnCO2RNd2p1vaeP2epXgn7zCgPu21ciIx34vB4g0sWpOhUE0In codegama@codegama
p276
ssVnetwork_config
p277
(dp278
Vcontent_path
p279
V/content/0000
p280
ssS'instance-id'
p281
g268
ssb.